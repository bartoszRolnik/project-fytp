{"ast":null,"code":"import _classCallCheck from \"/Users/macbook/Desktop/project-fytp/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/macbook/Desktop/project-fytp/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/macbook/Desktop/project-fytp/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/macbook/Desktop/project-fytp/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/macbook/Desktop/project-fytp/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/macbook/Desktop/project-fytp/src/components/TripPreferences.jsx\";\n// import React, {Component} from 'react';\n// import Button from './Button';\n// import '../App.css';\n// import FormAboutYou from './FormAboutYou';\n// import NextButton from './NextButton'\n// // import { Button } from 'reactstrap';\n// import ReactDOM from 'react-dom';\n// import Geosuggest from 'react-geosuggest';\n// import PlacesAutocomplete from 'react-places-autocomplete';\n// import {\n//     geocodeByAddress,\n//     geocodeByPlaceId,\n//     getLatLng,\n//   } from 'react-places-autocomplete';\n// class TripPreferences extends Component {\n//     render(){\n//         return(\n//             <div  id=\"section3\" className=\"container\">\n//                 <p className=\"titleSection3\">Where do you want to go?</p>\n//             </div>\n//         );\n//     }\n// }\n// export default TripPreferences;\nimport React from 'react';\nimport PlacesAutocomplete, { geocodeByAddress, getLatLng } from 'react-places-autocomplete';\nimport { withScriptjs, withGoogleMap, GoogleMap, Marker } from \"react-google-maps\";\n\nvar TripPreferences =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(TripPreferences, _React$Component);\n\n  function TripPreferences(props) {\n    var _this;\n\n    _classCallCheck(this, TripPreferences);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(TripPreferences).call(this, props));\n\n    _this.handleChange = function (address) {\n      _this.setState({\n        address: address\n      });\n    };\n\n    _this.handleSelect = function (address) {\n      geocodeByAddress(address).then(function (results) {\n        return getLatLng(results[0]);\n      }).then(function (latLng) {\n        return console.log('Success', latLng);\n      }).catch(function (error) {\n        return console.error('Error', error);\n      });\n    };\n\n    _this.state = {\n      address: ''\n    };\n    return _this;\n  }\n\n  _createClass(TripPreferences, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(PlacesAutocomplete, {\n        value: this.state.address,\n        onChange: this.handleChange,\n        onSelect: this.handleSelect,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }, function (_ref) {\n        var getInputProps = _ref.getInputProps,\n            suggestions = _ref.suggestions,\n            getSuggestionItemProps = _ref.getSuggestionItemProps,\n            loading = _ref.loading;\n        return React.createElement(\"div\", {\n          id: \"section3\",\n          className: \"container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79\n          },\n          __self: this\n        }, \"Where do you want to go?\"), React.createElement(\"input\", Object.assign({\n          className: \"searchPlacesInput\"\n        }, getInputProps({\n          placeholder: 'Search Places ...',\n          className: 'location-search-input'\n        }), {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80\n          },\n          __self: this\n        })), React.createElement(\"div\", {\n          className: \"autocomplete-dropdown-container\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 86\n          },\n          __self: this\n        }, loading && React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87\n          },\n          __self: this\n        }, \"Loading...\"), suggestions.map(function (suggestion) {\n          var className = suggestion.active ? 'suggestion-item--active' : 'suggestion-item'; // inline style for demonstration purpose\n\n          var style = suggestion.active ? {\n            backgroundColor: '#fafafa',\n            cursor: 'pointer'\n          } : {\n            backgroundColor: '#ffffff',\n            cursor: 'pointer'\n          };\n          return React.createElement(\"div\", Object.assign({}, getSuggestionItemProps(suggestion, {\n            className: className,\n            style: style\n          }), {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 97\n            },\n            __self: this\n          }), React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 103\n            },\n            __self: this\n          }, suggestion.description));\n        })));\n      });\n    }\n  }]);\n\n  return TripPreferences;\n}(React.Component);\n\nexport default TripPreferences;","map":{"version":3,"sources":["/Users/macbook/Desktop/project-fytp/src/components/TripPreferences.jsx"],"names":["React","PlacesAutocomplete","geocodeByAddress","getLatLng","withScriptjs","withGoogleMap","GoogleMap","Marker","TripPreferences","props","handleChange","address","setState","handleSelect","then","results","latLng","console","log","catch","error","state","getInputProps","suggestions","getSuggestionItemProps","loading","placeholder","className","map","suggestion","active","style","backgroundColor","cursor","description","Component"],"mappings":"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","sourcesContent":["// import React, {Component} from 'react';\n// import Button from './Button';\n// import '../App.css';\n// import FormAboutYou from './FormAboutYou';\n// import NextButton from './NextButton'\n// // import { Button } from 'reactstrap';\n// import ReactDOM from 'react-dom';\n// import Geosuggest from 'react-geosuggest';\n// import PlacesAutocomplete from 'react-places-autocomplete';\n// import {\n//     geocodeByAddress,\n//     geocodeByPlaceId,\n//     getLatLng,\n//   } from 'react-places-autocomplete';\n\n\n\n\n\n// class TripPreferences extends Component {\n\n    \n\n//     render(){\n        \n//         return(\n//             <div  id=\"section3\" className=\"container\">\n//                 <p className=\"titleSection3\">Where do you want to go?</p>\n                \n\n\n//             </div>\n\n//         );\n//     }\n// }\n\n// export default TripPreferences;\n\n\nimport React from 'react';\nimport PlacesAutocomplete, {\n  geocodeByAddress,\n  getLatLng,\n} from 'react-places-autocomplete';\nimport {\n    withScriptjs,\n    withGoogleMap,\n    GoogleMap,\n    Marker,\n  } from \"react-google-maps\";\n \nclass TripPreferences extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { address: '' };\n  }\n \n  handleChange = address => {\n    this.setState({ address });\n  };\n \n  handleSelect = address => {\n    geocodeByAddress(address)\n      .then(results => getLatLng(results[0]))\n      .then(latLng => console.log('Success', latLng))\n      .catch(error => console.error('Error', error));\n  };\n \n  render() {\n    return (\n      <PlacesAutocomplete\n        value={this.state.address}\n        onChange={this.handleChange}\n        onSelect={this.handleSelect}\n      >\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\n          <div id=\"section3\" className=\"container\">\n          <p>Where do you want to go?</p>\n            <input className=\"searchPlacesInput\"\n              {...getInputProps({\n                placeholder: 'Search Places ...',\n                className: 'location-search-input',\n              })}\n            />\n            <div className=\"autocomplete-dropdown-container\">\n              {loading && <div>Loading...</div>}\n              {suggestions.map(suggestion => {\n                const className = suggestion.active\n                  ? 'suggestion-item--active'\n                  : 'suggestion-item';\n                // inline style for demonstration purpose\n                const style = suggestion.active\n                  ? { backgroundColor: '#fafafa', cursor: 'pointer' }\n                  : { backgroundColor: '#ffffff', cursor: 'pointer' };\n                return (\n                  <div\n                    {...getSuggestionItemProps(suggestion, {\n                      className,\n                      style,\n                    })}\n                  >\n                    <span>{suggestion.description}</span>\n                  </div>\n                );\n              })}\n            </div>\n          </div>\n        )}\n      </PlacesAutocomplete>\n    );\n  }\n}\nexport default TripPreferences;"]},"metadata":{},"sourceType":"module"}